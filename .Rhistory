c(1, 2, 3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<- 9
ls()
list.files()
getwd()
?;ist.files
?list.files
args(list.files)
old.dir<- getwd()
dir.create(testdir)
?dir.create
dir.create(old.dir/testdir)
dir.create(old.dir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R", folder1)
file.path('folder1')
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?:
?backtick
? ':'
seq(1, 20)
seq(0, 10, by=0.5)
my_seq=seq(5, 10, length=30)
my_seq<- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(o,1,2), times=10)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect<- c(0.5,55,-10,6)
tf<- num_vect<1
tf
vec2<- num_vect>=6
tf2<- num_vect>= 6
num_vect>= 6
my_char<- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Peyman")
paste(c(my_char, "Peyman"), collapse = " ")
c(my_char, "Peyman")
my_char<- c(my_char, "Peyman")
my_name<- c(my_char, "Peyman")
my_name<- c(my_char, "Swirl")
my_char
info()
my_name<- c(my_char, "Peyman")
skip()
my_name <- c(my_char, "Swirl")
my_name <- c(my_char, "Swirl")
my_name <- c(my_char, "Peyman")
skip()
my_name <- c(my_char, "Peyman")
rm(my_name)
my_name <- c(my_char, "Peyman")
info()
nxt()
my_name <- c(my_char, "Peyman")
my_name <- c(my_char, "your_name_here")
my_name <- c(my_char, "Swirl")
my_char<- c("My", "name", "is")
rm(my_char)
my_char
my_name <- my_char
info()
main()
add2 <- function(x,y) {
x+y
}
add2(2,4)
x<- 1:20
above<- function(x,n=10) {
use<- x>n
x[use]
}
above(x)
Sys.time()
library("swirl")
clean()
clear()
rm(list=ls())
library("swirl")
library("swirl")
swirl()
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5=7)
!5=7
5 NOT=7
5=7
!(5==7)
FLASE&FALSE
FALSE&FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE,FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
c(2,4,5)
mean(c(2,4,5))
swirl()
swirl()
swirl()
library("swirl")
swirl()
submit()
swirl()
remove.packages("swirl")
library("swirl")
install.packages("xlsx")
library(xlsx)
R.home()
install.packages('RMySQL',type='source')
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL',type='source')
Sys.getenv('MYSQL_HOME')
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "q2.csv")
library(sqldf)
acs<- read.csv("q2.csv" , header = TRUE)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1 from acs")
R1<- unique(acs$AGEP)
R2<- sqldf("select distinct pwgtp1 from acs")
identical(R1,R2)
R2<- sqldf("select distinct AGEP from acs")
identical(R1,R2)
R2<- sqldf("select unique AGEP from acs")
R2<- sqldf("select AGEP where unique from acs")
R2<- sqldf("select distinct AGEP from acs")
R2<- sqldf("select distinct AGEP from acs")
identical(R1,R2)
R1
R2
url<- "http://biostat.jhsph.edu/~jleek/contact.html"
con<- url("http://biostat.jhsph.edu/~jleek/contact.html")
ds<- readline(con,10)
?readline
ds<- readline(con,n=10)
ds<- readLines(con,n=10)
nchar(ds)
ds<- readLines(con,n=20)
nchar(ds)
ds<- readLines(con,n=30)
nchar(ds)
ds<- readLines(con,n=100)
nchar(ds)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl, destfile="./wksst8110.for")
data <- read.csv("./wksst8110.for", header = TRUE)
file_name <- "./wksst8110.for"
read.fwf(file=file_name)
read.fwf(file=file_name, widths=c(-1,4,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
read.fwf(file=file_name, widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
df<- read.fwf(file=file_name,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
sum(df[, 4])
dim(df)
?plyr
library(plyr)
?plyr
install.packages("Hmisc")
library(Hmisc)
install.packages("reshape2")
library(reshape2)
install.packages("dplyr")
library(dplyr)
library(swirl)
swirl()
mydf<- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
size
size(cran)
select(cran, -(4:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5, NA, 10))
!is.na(c(3,5, NA, 10))
filter(cran, r_version == !is.na())
filter(cran, !is.na(r_version))
cran2<- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version), ip_id)
cran3<- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size +1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<- group_by(cran, package)
by_package
summarise(by_package, mean(size))
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<- gather(students2, sex_class, count)
res<- gather(students2, sex_class, count, -grade)
res
res<- gather(students2, sex_class, count)
?separate
separate(data=res, col= sex_class, into = c("sex", "class"))
students2 %>% gather( sex_class, count) %>% separate(col="sex_class", into=c("sex", "class"))
students2 %>% gather( sex_class, count, -grade) %>% separate(col="sex_class", into=c("sex", "class"))
rm(list=ls())
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "file4.csv")
db<- read.csv("file4.csv")
load(dplyr)
library(dplyr)
tdb<- tbl_df(db)
tdb
agricultureLogical<- (tbd$ACR==3 & tbd$AGS==6 )
agricultureLogical<- (tdb$ACR==3 & tdb$AGS==6 )
head(agricultureLogical)
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
db<- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "file5.jpg")
db<- readJPEG("file5.jpg")
db<- readJPEG("file5.jpg", native=TRUE)
?readJPEG
db<- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "file5.csv")
rankin<- read.csv("file5.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "file6.csv")
countriesr<- read.csv("file6.csv")
colnames(rankin)
head(rankin)
class(rankin)
rankin<- read.csv("file5.csv", header = TRUE)
head(rankin)
head(countriesr)
library(dplyr)
mergeddb<- merge(rankin, countriesr, by.x = "X" , by.y = "countryCode", all=TRUE)
ranking<- tbl_df(rankin)
countriess<- tbl_df(countriesr)
mergeddb<- merge(ranking, countriess, by.x = "X" , by.y = "countryCode", all=TRUE)
colnames(countriess)
mergeddb<- merge(ranking, countriess, by.x = "X" , by.y = "CountryCode", all=TRUE)
mergeddb
str(mergeddb)
arrangedrank<- arrange(mergeddb,GDP)
arrangedrank<- arrange(mergeddb,Gross.domestic.product.2012)
tail(arrangedrank)
arrangedrank<- arrange(mergeddb,Gross.domestic.product.2012n na.rm=TRUE)
arrangedrank<- arrange(select(mergeddb,!is.na(Gross.domestic.product.2012)),Gross.domestic.product.2012)
naremoved<- select(mergeddb, !is.na(Gross.domestic.product.2012))
colnames(mergeddb)
mergeddb$Gross.domestic.product.2012
class(mergeddb$Gross.domestic.product.2012)
as.numeric(mergeddb$Gross.domestic.product.2012)
as.numeric(as.character(mergeddb$Gross.domestic.product.2012))
arrangedrank<- arrange(select(mergeddb, !is.na(as.numeric(as.character(mergeddb$Gross.domestic.product.2012)))),Gross.domestic.product.2012)
ff<- as.numeric(as.character(mergeddb$Gross.domestic.product.2012))
order(ff)
mergedddb<- mergeddb[order(ff),]
mergeddb[13,]
colnames(mergeddb)
mergeddb[,1]
class(mergeddb[,1])
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f, mode = "wb")
img <- readJPEG(f, native = TRUE)
quantile(img, probs = c(0.3, 0.8))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
colnames(mergeddb
)
class(mergeddb$Gross.domestic.product.2012)
rm(list=ls())
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
ff<- read.csv("GDP.csv")
class(ff)
colnames(ff)
class(ff$Gross.domestic.product.2012)
ff<- read.csv("GDP.csv", stringsAsFactors = FALSE)
class(ff$Gross.domestic.product.2012)
as.numeric(ff$Gross.domestic.product.2012)
rr<-data.table(ff)
library(dplyr)
rr<-data.table(ff)
rr<-data.table::(ff)
rr<- tbl_df(ff)
class(rr$Gross.domestic.product.2012)
ww<- filter(rr, !is.na(Gross.domestic.product.2012))
rr$Gross.domestic.product.2012<- as.numeric(rr$Gross.domestic.product.2012)
ww<- filter(rr, !is.na(Gross.domestic.product.2012))
ww
install.packages("stringer")
library(stringer)
install.packages("stringr")
install.packages("stringr")
library(stringr)
install.packages("lubridate")
library(lubridate)
library(swirl)
swirl()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day<- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, lable=TRUE)
wday(this_day, label =TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_date<- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("march 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment)
update(this_moment, hours = 22, minutes = 20, seconds = 24)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 9, minutes = 16, seconds = 0)
info()
skip()
this_moment
?now
nyc<- now(tzone="America/New_York")
nyc
depart<- nyc + days(2)
depart
depart<- update(depart+hours (17)+minutes (34))
depart<- update(depart,hours (17),minutes (34))
update(depart)
?update
depart<- update(depart,depart+hours (17)+minutes (34))
info()
skip()
depart
arrive<- depart+hour(15)+minute(50)
arrive<- depart+hours(15)+minutes(50)
>with_tz()
?with_tz
arrive<- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time<- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
interval(arrive,last_time)
how_long<- interval(arrive,last_time)
how_long<- interval(last_time,arrive)
as.period(last_time)
as.period(how_long)
stopwatch()
bye()
rm(list=ls())
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "File1.csv")
Data<- read.csv("File1.csv")
names(Data)
aa<- strsplit(names(Data),"wgtp")
aa[123]
aa[[123]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "File2.csv")
Data1<- read.csv("File2.csv")
names(Data1)
class(Data1)
class(Data1$Gross.domestic.product.2012)
Data1<- read.csv("File2.csv", stringsAsFactors = FALSE)
class(Data1$Gross.domestic.product.2012)
Data1$Gross.domestic.product.2012<- as.numeric(Data1$Gross.domestic.product.2012)
mean(Data1$Gross.domestic.product.2012, na.rm=TRUE)
Data1<- read.csv("File2.csv", stringsAsFactors = FALSE)
class(Data1$Gross.domestic.product.2012)
Data1$Gross.domestic.product.2012
str(Data1)
str(Data)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "File3.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "File4.csv")
Data3<- read.csv("File3.csv", stringsAsFactors = FALSE)
Data4<- read.csv("File4.csv", stringsAsFactors = FALSE)
str(Data3)
str(Data4)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
str(amzn)
head(amzn)
names(amzn)
dim(amzn)
amz[1,1]
amzn[1,1]
row.names(amzn)
names(amzn)
class(amzn)
amzn2<- as.data.frame.table(amzn)
library(data.table)
amzn2<- as.data.table(amzn)
head(amzn2)
head(amzn2$index)
amzn2$index<- ymd(amzn2$index)
head(amzn2$index)
class(amzn2$index)
dim(amzn2)
amzn3<- amzn2[year(amzn2$index)==2012]
dim(amzn3)
amzn3<- amzn2[wday(amzn2$index)==2]
dim(amzn3)
wday(amzn2$index)
amzn4<- amzn3[wday(amzn3$index)==2]
dim(amzn4)
rm(list=ls())
setwd("D:/Coursera/UCI HAR Dataset")
f<- c("fdfd", "sasa")
ff<-c(f,"dd")
ff
source("DataCleaningScript.R")
source("DataCleaningScript.R")
